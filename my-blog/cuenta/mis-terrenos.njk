---
layout: "base.njk"
title: "Mis Anuncios"
---

<div class="bg-gray-100 min-h-screen">
    <div class="container mx-auto px-6 py-12">
        <!-- Dashboard Header -->
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
            <div>
                <h1 class="text-3xl md:text-4xl font-bold text-gray-800">Mis Anuncios Publicados</h1>
                <p class="text-gray-600 mt-1">Gestiona, edita o elimina tus terrenos en venta.</p>
            </div>
            <a href="/cuenta/nuevo-terreno" class="mt-4 md:mt-0 inline-flex items-center gap-2 bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-full transition duration-300 shadow-lg">
                <i data-lucide="plus-circle" class="w-5 h-5"></i>
                Publicar Nuevo Anuncio
            </a>
        </div>
        
        <p id="message" class="text-center text-gray-600 py-8"></p>
        
        <!-- Listings Grid -->
        <div id="listings-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <!-- Cards will be injected here -->
        </div>
        
        <!-- Empty State (hidden by default) -->
        <div id="empty-state" class="hidden text-center bg-white p-12 rounded-lg shadow-md mt-8">
            <i data-lucide="folder-open" class="w-16 h-16 mx-auto text-gray-400 mb-4"></i>
            <h2 class="text-2xl font-bold text-gray-700">Aún no tienes anuncios</h2>
            <p class="text-gray-500 mt-2 mb-6">¡Empieza hoy! Publica tu primer terreno para llegar a miles de compradores.</p>
            <a href="/cuenta/nuevo-terreno" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-full transition duration-300 text-lg">
                Publicar mi Primer Anuncio
            </a>
        </div>
    </div>
</div>

<script>
    const listingsContainer = document.getElementById('listings-container');
    const messageElement = document.getElementById('message');
    const emptyStateElement = document.getElementById('empty-state');
    const apiEndpoint = 'https://us-central1-ultimate-life-472800-r4.cloudfunctions.net/get_my_listings';

    async function fetchListings() {
        const token = localStorage.getItem('authToken');
        if (!token) {
            window.location.href = '/iniciar-session'; // Redirect if not logged in
            return;
        }

        try {
            const response = await fetch(apiEndpoint, {
                method: 'GET',
                headers: { 'Authorization': `Bearer ${token}` }
            });

            if (response.ok) {
                const responseData = await response.json();
                if (responseData.listings && responseData.listings.length > 0) {
                    messageElement.style.display = 'none';
                    renderListings(responseData.listings);
                } else {
                    messageElement.style.display = 'none';
                    listingsContainer.style.display = 'none';
                    emptyStateElement.classList.remove('hidden');
                }
            } else {
                const errorData = await response.json();
                throw new Error(errorData.message || 'Could not fetch listings.');
            }
        } catch (error) {
            messageElement.textContent = `Error: ${error.message}`;
            messageElement.className = 'text-center text-red-600 p-4 bg-red-100 rounded-md';
        }
    }

    function renderListings(listings) {
        listings.forEach(listing => {
            const firstPhoto = (listing.photos && listing.photos.length > 0) 
                ? listing.photos[0] 
                : 'https://via.placeholder.com/400x300.png?text=Sin+Foto';
            
            const card = document.createElement('div');
            card.className = 'bg-white rounded-lg shadow-lg overflow-hidden flex flex-col';
            card.innerHTML = `
                <img src="${firstPhoto}" alt="${listing.titulo}" class="w-full h-56 object-cover">
                <div class="p-6 flex-grow">
                    <h2 class="text-xl font-bold mb-2 truncate">${listing.titulo}</h2>
                    <p class="text-gray-600 mb-4">${listing.ciudad || ''}, ${listing.provincia || ''}</p>
                    <div class="text-2xl font-bold text-green-600">$${listing.precio.toLocaleString()}</div>
                </div>
                <div class="p-4 bg-gray-50 border-t flex justify-end gap-2">
                    <a href="/cuenta/editar-terreno?id=${listing._id}" class="inline-flex items-center gap-1 text-sm bg-yellow-400 hover:bg-yellow-500 text-yellow-900 font-bold py-2 px-3 rounded-md transition duration-200">
                        <i data-lucide="file-edit" class="w-4 h-4"></i> Editar
                    </a>
                    <button onclick="deleteListing('${listing._id}')" class="inline-flex items-center gap-1 text-sm bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-3 rounded-md transition duration-200">
                        <i data-lucide="trash-2" class="w-4 h-4"></i> Eliminar
                    </button>
                </div>
            `;
            listingsContainer.appendChild(card);
        });
        lucide.createIcons(); // Re-initialize icons after adding them to the DOM
    }

    async function deleteListing(listingId) {
        if (confirm('¿Estás seguro de que quieres eliminar este anuncio? Esta acción no se puede deshacer.')) {
            const token = localStorage.getItem('authToken');
            if (!token) return;
            const deleteEndpoint = `https://us-central1-ultimate-life-472800-r4.cloudfunctions.net/delete_listing?listingId=${listingId}`;
            try {
                const response = await fetch(deleteEndpoint, {
                    method: 'DELETE',
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                if (response.ok) {
                    alert('¡Anuncio eliminado con éxito!');
                    window.location.reload();
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Unknown error.');
                }
            } catch (error) {
                alert(`Error al eliminar el anuncio: ${error.message}`);
            }
        }
    }

    document.addEventListener('DOMContentLoaded', fetchListings);
</script>